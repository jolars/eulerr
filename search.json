[{"path":[]},{"path":"/CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team johanlarsson@outlook.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"/CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":[]},{"path":"/articles/gallery.html","id":"uniform-intersections","dir":"Articles","previous_headings":"Euler Diagrams","what":"Uniform intersections","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"uniform_intersections <- euler(c(\"A\" = 10, \"B\" = 10, \"C\" = 10,                                  \"A&B\" = 4, \"A&C\" = 4, \"B&C\" = 4,                                  \"A&B&C\" = 2)) plot(uniform_intersections)"},{"path":"/articles/gallery.html","id":"disjoint-sets","dir":"Articles","previous_headings":"Euler Diagrams","what":"Disjoint sets","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"disjoint_sets <- euler(c(A = 1, B = 1, C = 1)) plot(disjoint_sets,       labels = c(\"Tom\", \"Greg\", \"Alberta\"),      edges = list(lty = 1:3))"},{"path":"/articles/gallery.html","id":"a-set-contained-in-the-intersection-of-two-sets","dir":"Articles","previous_headings":"Euler Diagrams","what":"A set contained in the intersection of two sets","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"completely_contained <- euler(c(\"A\" = 15, \"B\" = 15, \"C\" = 0,                                 \"A&B\" = 3, \"A&C\" = 0, \"B&C\" = 0,                                 \"A&B&C\" = 3)) plot(completely_contained,      labels = list(col = c(\"white\", \"black\", \"black\")),      edges = list(col = \"white\", lex = 2),      fills = c(\"black\", \"cyan\", \"orange\"))"},{"path":"/articles/gallery.html","id":"two-sets-intersecting-inside-a-third","dir":"Articles","previous_headings":"Euler Diagrams","what":"Two sets intersecting inside a third","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"intersecting_inside <- euler(c(\"A\" = 15, \"B\" = 0, \"C\" = 0,                                \"A&B\" = 3, \"A&C\" = 3, \"B&C\" = 0,                                 \"A&B&C\" = 2)) plot(intersecting_inside,      fills = list(fill = c(\"lavenderblush2\",                             \"lightblue2\",                             \"lightsalmon\",                            \"\",                             \"\",                             \"\",                            \"plum2\")),      legend = list(side = \"right\"))"},{"path":"/articles/gallery.html","id":"difficult-set-for-circles","dir":"Articles","previous_headings":"Euler Diagrams","what":"Difficult set (for circles!)","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"one_contained <- euler(c(\"A\" = 7, B = 6, C = 0,                           \"A&B\" = 0, \"A&C\" = 1, \"B&C\" = 1,                          \"A&B&C\" = 2),                        shape = \"ellipse\") plot(one_contained,      quantities = list(type = \"percent\"))"},{"path":"/articles/gallery.html","id":"russian-doll","dir":"Articles","previous_headings":"Euler Diagrams","what":"Russian doll","title":"A Gallery of Euler and Venn Diagrams","text":"Sets intersecting inside sets.","code":"russian_doll <- euler(c(\"A\" = 15, \"B\" = 0, C = 0,                          \"A&B\" = 10, \"A&C\" = 0, \"B&C\" = 0,                         \"A&B&C\" = 5)) plot(russian_doll)"},{"path":"/articles/gallery.html","id":"wilkinson-set-relationship","dir":"Articles","previous_headings":"Euler Diagrams","what":"Wilkinson set relationship","title":"A Gallery of Euler and Venn Diagrams","text":"set relationship taken Wilkinson et al. works best ellipses.","code":"wilkinson <- euler(c(A = 4, B = 6, C = 3, D = 2, E = 7, F = 3,                      \"A&B\" = 2, \"A&F\" = 2, \"B&C\" = 2, \"B&D\" = 1,                      \"B&F\" = 2, \"C&D\" = 1, \"D&E\" = 1, \"E&F\" = 1,                      \"A&B&F\" = 1, \"B&C&D\" = 1),                    shape = \"ellipse\") plot(wilkinson,       labels = list(fontfamily = \"serif\"),      edges = list(lty = 3),      quantities = list(type = \"percent\",                         font = 3))"},{"path":"/articles/gallery.html","id":"gene-set","dir":"Articles","previous_headings":"Euler Diagrams","what":"Gene set","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"genes <- euler(c(\"SE\" = 13, \"Treat\" = 28, \"Anti-CCP\" = 101, \"DAS28\" = 91,                  \"SE&Treat\" = 1, \"SE&DAS28\" = 14, \"Treat&Anti-CCP\" = 6,                  \"SE&Anti-CCP&DAS28\" = 1)) plot(genes,      quantities = list(type = c(\"percent\", \"counts\")))"},{"path":"/articles/gallery.html","id":"three-sets-intersecting-inside-a-fourth","dir":"Articles","previous_headings":"Euler Diagrams","what":"Three sets intersecting inside a fourth","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"three_inside_fourth <- euler(c(\"A\" = 30,                                \"A&B\" = 3, \"A&C\" = 3, \"A&D\" = 3,                                \"A&B&C\" = 2, \"A&B&D\" = 2, \"A&C&D\" = 2,                                \"A&B&C&D\" = 1)) plot(three_inside_fourth)"},{"path":"/articles/gallery.html","id":"eulerape-combination","dir":"Articles","previous_headings":"Euler Diagrams","what":"eulerAPE combination","title":"A Gallery of Euler and Venn Diagrams","text":"combination taken eulerAPE article.","code":"eulerape <- euler(c(\"a\" = 3491, \"b\" = 3409, \"c\" = 3503,                     \"a&b\" = 120, \"a&c\" = 114, \"b&c\" = 132,                     \"a&b&c\" = 126),                   shape = \"ellipse\",                   control = list(extraopt = FALSE)) plot(eulerape)"},{"path":"/articles/gallery.html","id":"four-uniform-interactions","dir":"Articles","previous_headings":"Euler Diagrams","what":"Four uniform interactions","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"uniform <- euler(c(\"A\" = 10, \"B\" = 10, \"C\" = 10, \"D\" = 10,                    \"A&B\" = 3, \"A&C\" = 3, \"A&D\" = 0, \"B&C\" = 0, \"B&D\" = 3, \"C&D\" = 3,                    \"A&B&C\" = 1, \"A&B&D\" = 1, \"A&C&D\" = 1, \"B&C&D\" = 1,                    \"A&B&C&D\" = 1)) plot(uniform, labels = list(labels = c(\"Frodo\", \"Sam\", \"Merry\", \"Pippin\"),                             font = 1:4,                             col = 1:4,                             cex = seq(1, 1.5, length.out = 4)))"},{"path":"/articles/gallery.html","id":"two-circles-intersecting-completely","dir":"Articles","previous_headings":"Euler Diagrams","what":"Two circles intersecting completely","title":"A Gallery of Euler and Venn Diagrams","text":"","code":"two_overlapping <- euler(c(\"A\" = 0, \"B\" = 0, \"A&B\" = 10)) plot(two_overlapping)"},{"path":"/articles/introduction.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Introducing eulerr","text":"eulerr generates area-proportional euler diagrams display set relationships (intersections, unions, disjoints) circles ellipses. Euler diagrams Venn diagrams without requirement set interactions present (whether empty ). , depending input, eulerr sometimes produce Venn diagrams sometimes . R features several packages produce Euler diagrams; prominent ones (CRAN) eVenn, VennDiagram venn colorfulVennPlot, venneuler. last (venneuler) primary inspiration package, along refinements Fredrickson presented blog made available javascript venn.js. eulerAPE, first program uses ellipses instead circles, also instrumental design eulerr. downside eulerAPE handles three sets need intersect. venneuler, hand, take number sets (theory), yet known produce imperfect solutions set configurations perfect . unlike eulerAPE, restricted circles (venn.js).","code":""},{"path":"/articles/introduction.html","id":"enter-eulerr","dir":"Articles","previous_headings":"","what":"Enter eulerr","title":"Introducing eulerr","text":"eulerr based improvements venneuler Ben Fredrickson introduced venn.js programmed scratch, uses different optimizers, returns statistics featured venneuler eulerAPE well allows range different inputs conditioning additional variables. Moreover, can model set relationships ellipses number sets involved.","code":""},{"path":"/articles/introduction.html","id":"input","dir":"Articles","previous_headings":"","what":"Input","title":"Introducing eulerr","text":"time writing, possible provide input eulerr either named numeric vector set combinations disjoint set combinations unions (depending argument type set euler()), matrix data frame logicals columns representing sets rows set relationships observation, list sample spaces, table. inspect results printing eulerr object directly access plot residuals. Residuals fit diagram. can also use eulerr’s built error_plot() function diagnose fit. plot error_plot(). shows us intersection somewhat overrepresented . Given residuals scale original values, however, residuals arguably little concern. alternative, plot circles another program retrieving coordinates radii.","code":"library(eulerr)  # Input in the form of a named numeric vector fit1 <- euler(c(   \"A\" = 25,   \"B\" = 5,   \"C\" = 5,   \"A&B\" = 5,   \"A&C\" = 5,   \"B&C\" = 3,   \"A&B&C\" = 3 ))  # Input as a matrix of logicals set.seed(1) mat <- cbind(   A = sample(c(TRUE, TRUE, FALSE), 50, TRUE),   B = sample(c(TRUE, FALSE), 50, TRUE),   C = sample(c(TRUE, FALSE, FALSE, FALSE), 50, TRUE) ) fit2 <- euler(mat) fit2 #>       original fitted residuals regionError #> A           13     13         0       0.008 #> B            4      4         0       0.002 #> C            0      0         0       0.000 #> A&B         17     17         0       0.010 #> A&C          5      5         0       0.003 #> B&C          1      0         1       0.024 #> A&B&C        2      2         0       0.001 #>  #> diagError: 0.024  #> stress:    0.002 # Cleveland dot plot of the residuals dotchart(resid(fit2)) error_plot(fit2) coef(fit2) #>        h       k     a     b   phi #> A -0.531 -0.2498 3.432 3.432 2.499 #> B  1.112 -0.2498 2.706 2.706 2.499 #> C -1.506  1.4113 1.493 1.493 2.499"},{"path":"/articles/introduction.html","id":"goodness-of-fit","dir":"Articles","previous_headings":"Input","what":"Goodness-of-fit","title":"Introducing eulerr","text":"tell can trust solution, use two goodness--fit measures: stress statistic venneuler (Wilkinson 2012), ∑=1n(yi−ŷ)2∑=1nyi2 \\frac{\\sum_{=1}^{n} (y_i - \\hat{y}_i)^2}{\\sum_{=1}^{n} y_i ^ 2} ŷ\\hat{y}_i ordinary least squares estimate regression fitted areas original areas explored optimization, diagError statistic eulerAPE (Micallef Rodgers 2014): maxi=1,2,…,n|yi∑yi−ŷ∑ŷ| \\max_{= 1, 2, \\dots, n} \\left| \\frac{y_i}{\\sum y_i} - \\frac{\\hat{y}_i}{\\sum \\hat{y}_i} \\right| example, diagError stress 0.002, suggesting fit accurate. can now confident eulerr provides reasonable representation input using circles. otherwise, might try use ellipses instead. (Wilkinson 2012) features difficult combination manages fit reasonably small error; eulerr, however, can get rid error entirely. difficult combination Wilkinson 2012. still lack good fit tried ellipses, best stop look another way visualize data. (suggest excellent UpSetR package.)","code":"wilkinson2012 <- c(   A = 4,   B = 6,   C = 3,   D = 2,   E = 7,   F = 3,   \"A&B\" = 2,   \"A&F\" = 2,   \"B&C\" = 2,   \"B&D\" = 1,   \"B&F\" = 2,   \"C&D\" = 1,   \"D&E\" = 1,   \"E&F\" = 1,   \"A&B&F\" = 1,   \"B&C&D\" = 1 ) fit3 <- euler(wilkinson2012, shape = \"ellipse\") plot(fit3)"},{"path":"/articles/introduction.html","id":"visualization","dir":"Articles","previous_headings":"Input","what":"Visualization","title":"Introducing eulerr","text":"get fun part: plotting diagram. easy, well highly customizable, eulerr. default parameters can easily adjusted suit anybody’s needs. Customizing Euler plots breeze eulerr. Customizing Euler plots breeze eulerr. Plotting provided custom plotting method built top excellent facilities made available core R package grid. eulerr’s default color palette chosen color deficiency-friendly.","code":"plot(fit2) # Remove fills, vary borders, display quantities, and switch font. plot(   fit2,   quantities = TRUE,   fill = \"transparent\",   lty = 1:3,   labels = list(font = 4) )"},{"path":"/articles/introduction.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"Introducing eulerr","text":"eulerr possible without Ben Fredrickson’s work venn.js Leland Wilkinson’s venneuler.","code":""},{"path":[]},{"path":"/articles/under-the-hood.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"eulerr under the hood","text":"eulerr relies extensive machinery turn user input pretty Euler diagram. Little requires tinkering user. make happen, however, eulerr needs make several well-formed decisions design diagram behalf user, trivial task. document outlines implementation eulerr input output. designed evolving documentation innards program.","code":""},{"path":"/articles/under-the-hood.html","id":"input","dir":"Articles","previous_headings":"","what":"Input","title":"eulerr under the hood","text":"Euler diagrams present relationships sets, wherefore data must describe relationships, either directly indirectly. eulerr allows several alternatives data, namely, intersections relative complements \\B=3B\\=2A∩B=1, \\setminus B = 3 \\quad B \\setminus = 2 \\quad \\cap B=1, unions identities =4B=3A∩B=1, =4 \\quad B=3 \\quad \\cap B=1, matrix binary (boolean) indices, [𝐀𝐁101010110101,] \\begin{bmatrix}   \\mathbf{} & \\mathbf{B}\\\\   1          & 0     \\\\   1          & 0     \\\\   1          & 0     \\\\   1          & 1     \\\\   0          & 1     \\\\   0          & 1, \\end{bmatrix} list sample spaces ={,b,c,d}B={,e,f,}, \\begin{array}{l}     = \\{,\\,b,\\,c,\\,d\\}\\\\     B = \\{,\\,e,\\,f,\\}   \\end{array}, two- three-way table additional feature matrix form, user may supply factor variable split data set fitting diagram, sometimes improves diagrams set relationships vary across categories. Whichever type input provided, eulerr translate first second types, intersections relative complements unions identities, used steps come. Euler diagram fit two steps: first, initial layout formed circles using sets’ pairwise relationships. Second, layout fine-tuned taking 2N−12^N-1 intersections consideration.","code":""},{"path":"/articles/under-the-hood.html","id":"initial-layout","dir":"Articles","previous_headings":"","what":"Initial layout","title":"eulerr under the hood","text":"initial layout, adopt constrained version multi-dimensional scaling (MDS) adapted venn.js (Frederickson 2016), turn modification algorithm used venneuler (Wilkinson 2012). , consider pairwise intersections sets, attempting position respective shapes minimize difference separation centers required obtain optimal overlap actual overlap shapes diagram. problem unfortunately intractable ellipses, infinite number ways can position two ellipses obtain given overlap. Thus, restrict circles initial layout, can use circle–circle overlap formula numerically find required distance, dd, pairwise relationship. Oij=ri2arccos(dij2+ri2−rj22dijri)+rj2arccos(dij2+rj2−ri22dijrj)−12(−dij+ri+rj)(dij+ri−rj)(dij−ri+rj)(dij+ri+rj), \\begin{aligned} O_{ij} = & r_i^2\\arccos\\left(\\frac{d_{ij}^2 + r_i^2 - r_j^2}{2d_{ij}r_i}\\right) + r_j^2\\arccos\\left(\\frac{d_{ij}^2 + r_j^2 - r_i^2}{2d_{ij}r_j}\\right) -\\\\ &\\quad \\frac{1}{2}\\sqrt{(-d_{ij} + r_i + r_j)(d_{ij} + r_i - r_j)(d_{ij} - r_i + r_j)(d_{ij} + r_i + r_j)}, \\end{aligned} rir_i rjr_j radii circles representing iith jjth sets respectively, OijO_{ij} overlap, dijd_{ij} separation. circle–circle overlap computed function discs’ separation (dijd_{ij}), radii (ri,rjr_i,r_j), area overlap (OijO_{ij}). Setting ri=Fi/πr_i = \\sqrt{F_i/\\pi}, FiF_i size iith set, able obtain dd numerically using squared difference OO desired overlap loss function, ℒ(dij)=(Oij−(Fi∩Fj))2,<j≤n, \\mathcal{L}(d_{ij}) = \\left(O_{ij} - (F_i \\cap F_j)  \\right)^2, \\quad \\text{} < j \\leq n, optimize using optimize()1 two-set combination, need plot exact diagram, given now two circles’ radii separation may place circles arbitrarily long separation, dd, remains . , however, case two sets. three sets, circles need arranged interfere minimally one another. cases, set configuration allows accomplished flawlessly, often, compromises must made. often case context, turns another optimization problem. can tackled many ways; eulerr’s approach based method developed Frederickson (2015), author describes constrained multi-dimensional scaling. algorithm tries position circles separation pair circles matches separation required separation equation. two sets disjoint, however, algorithm indifferent relative locations circles long intersect. equivalent applies subset sets: long circle representing smaller set remains within larger circle, locations free vary. cases, loss function residual sums squares optimal separation circles, dd, found overlap equation, actual distance layout currently exploring. ℒ(h,k)=ℓ∑1≤<j≤N{0Fi∩Fj=∅ Oij=00(Fi⊆Fj Fi⊇Fj) Oij=0((hi−hj)2+(ki−kj)2−dij2)2otherwise. \\mathcal{L}(h,k) = \\displaystyle \\ell{\\sum_{1\\leq <j\\leq N}} \\begin{cases} 0 & F_i \\cap F_j = \\emptyset \\text{ } O_{ij} = 0\\\\ 0 & (F_i \\subseteq F_j \\text{ } F_i \\supseteq F_j) \\text{ } O_{ij}=0\\\\ \\left(\\left(h_i-h_j\\right)^2+\\left(k_i-k_j\\right)^2-d_{ij}^2\\right)^2  & \\text{otherwise} \\\\ \\end{cases}. analytical gradient retrieved usual taking derivative loss function, ∇→f(hi)=∑j=1N{0→Fi∩Fj=∅ Oij=00→(Fi⊆Fj Fi⊇Fj) Oij=04(hi−hj)((hi−hj)2+(ki−kj)2−dij2)otherwise, \\vec{\\nabla} f(h_i) = \\sum_{j=1}^N \\begin{cases} \\vec{0} & F_i \\cap F_j = \\emptyset \\text{ } O_{ij} = 0\\\\ \\vec{0} & (F_i \\subseteq F_j \\text{ } F_i \\supseteq F_j) \\text{ } O_{ij}=0\\\\ 4\\left(h_i-h_j\\right)\\left(\\left(h_i-h_j\\right)^2+\\left(k_i-k_j\\right)^2-d_{ij}^2\\right) & \\text{otherwise}, \\\\ \\end{cases} ∇→f(ki)\\vec{\\nabla} f(k_i) found gradient hih_i swapped kik_i (vice versa). Hessian loss function given next. However, current release R suffers bug2 causing analytical Hessian updated improperly, current release eulerr instead relies numerical approximation Hessian offered optimizer. $$ \\small \\mathbf{H}(h,k) = \\ell{\\sum_{1\\leq <j\\leq N}} \\begin{bmatrix} 4\\left(\\left(h_i-h_j\\right)^2+\\left(k_i-k_j\\right)^2-d_{ij}^2\\right)+8\\left(h_i-h_j\\right)^2 & \\cdots & 8\\left(h_i-h_j\\right)\\left(k_i-k_j\\right)\\\\ \\vdots & \\ddots & \\vdots \\\\ 8\\left(k_i-k_j\\right)\\left(h_i-h_j\\right) & \\cdots & 4\\left(\\left(h_i-h_j\\right)^2+\\left(k_i-k_j\\right)^2-d_{ij}^2\\right)+8\\left(k_i-k_j\\right)^2 \\end{bmatrix}. $$ Note constraints given loss gradients still apply element Hessian omitted convenience . optimize loss function using nonlinear optimizer nlm() R core package stats. underlying code nlm written Schnabel, Koonatz, Weiss (1985). ported R Saikat DebRoy R Core team (R Core Team 2017) previous FORTRAN C translation Richard H. Jones. nlm() consists system Newton-type algorithms performs well difficult problems (Nash 2014). initial layout outlined sometimes turn perfect diagrams, reliably diagram completely determined pairwise intersections. pertinently, yet considered higher-order intersections algorithm neither approached problem using ellipses—set .","code":""},{"path":"/articles/under-the-hood.html","id":"final-layout","dir":"Articles","previous_headings":"","what":"Final layout","title":"eulerr under the hood","text":"now need account sets’ intersections , consequently, overlaps diagram. goal map area uniquely subset data input purpose use sets’ intersections relative complements intersections, use shorthand ω\\omega. introduced form input section, now define rigorously. family N sets, F=F1,F2,…,FNF = F_1, F_2, \\dots, F_N, n=2N−1n=2^N-1 intersections, define ω\\omega intersections sets relative complements, ω1=F1\\⋂=2NFiω2=⋂=12Fi\\⋂=3NFi⋮=⋮ωn=⋂=1NFi \\begin{aligned} \\omega_{1} & = F_1 \\setminus \\bigcap_{=2}^N F_i  \\\\ \\omega_{2} & = \\bigcap_{=1}^2 F_i \\setminus \\bigcap_{=3}^{N} F_i\\\\ \\vdots    & = \\vdots \\\\ \\omega_n & = \\bigcap_{=1}^{N}F_i \\end{aligned} ∑=1nωi=⋃j=1NFi. \\sum_{= 1}^n \\omega_i =  \\bigcup_{j=1}^N F_i. Analogously ω\\omega, also introduce &\\&-operator, Fi&Fj=(Fi∩Fj)\\(Fi∩Fj)𝖼. F_i \\& F_j = (F_i \\cap F_j)\\setminus (F_i \\cap F_j)^\\textsf{c}. fitted diagram’s area-equivalents ω\\omega defined AA, exact diagram requires ωi=Ai\\omega_i = A_i =1,2,…,2N−1i=1,2,\\dots,2^N-1, NN number sets input. initial configuration, restricted circles now extend also ellipses. now , abandon practice treating circles separately—special case ellipses, , hence, everything applies ellipse equally circle.","code":""},{"path":"/articles/under-the-hood.html","id":"intersecting-ellipses","dir":"Articles","previous_headings":"Final layout","what":"Intersecting ellipses","title":"eulerr under the hood","text":"now need ellipses’ points intersections. eulerr’s approach outlined (Richter-Gebert 2011) based projective, opposed Euclidean, geometry. collect intersection points, naturally need consider two ellipses time. canonical form ellipse given [(x−h)cosϕ+(y−k)sinϕ]2a2+[(x−h)sinϕ−(y−k)cosϕ]2b2=1, \\frac{\\left[ (x-h)\\cos{\\phi}+(y-k)\\sin{\\phi} \\right]^2}{^2}+ \\frac{\\left[(x-h) \\sin{\\phi}-(y-k) \\cos{\\phi}\\right]^2}{b^2} = 1, ϕ\\phi counter-clockwise angle positive x-axis semi-major axis aa, bb semi-minor axis, h,kh, k x- y-coordinates, respectively, ellipse’s center. rotated ellipse semimajor axis aa, semiminor axis bb, rotation ϕ\\phi, center h,kh,k. However, ellipse conic3 can represented quadric form, Ax2+Bxy+Cy2+Dx+Ey+F=0 Ax^2 + Bxy + Cy^2 + Dx + Ey + F = 0 turn can represented matrix, [AB/2D/2B/2CE/2D/2E/2F], \\begin{bmatrix}   & B/2 & D/2 \\\\ B/2 & C   & E/2 \\\\ D/2 & E/2 & F \\end{bmatrix}, form need intersect ellipses. now proceed form three degenerate conics linear combination two ellipses wish intersect, split one degenerate conics two lines, intersect one ellipses lines, yielding 0 4 intersection points points. process used intersect two ellipses, yielding four points. figure inspired example Richter–Gebert 2011.","code":""},{"path":"/articles/under-the-hood.html","id":"overlap-areas","dir":"Articles","previous_headings":"Final layout","what":"Overlap areas","title":"eulerr under the hood","text":"Using intersection points set ellipses retrieved , can now find overlap ellipses. interested points contained within ellipses, together form geometric shape consisting convex polygon, sides made straight lines consecutive points, set elliptical arcs—one pair points. overlap area three ellipses sum convex polygon (grey) 2–3 ellipse segments (blue). continue ordering points around centroid. trivial find area polygon section since always convex. Now, elliptical segment formed arcs connect successive points, can establish segments’ areas algorithmically (Eberly 2016). ellipse related pair points (located angles θ0\\theta_0 θ1\\theta_1 semimajor axis), proceed find area centering ellipse (0,0)(0, 0), normalizing rotation, needed compute area, integrating ellipse [0,θ00,\\theta_0] [0,θ10,\\theta_1], producing elliptical sectors F(θ0)F(\\theta_0) F(θ1)F(\\theta_1), subtracting smaller (F(θ0F(\\theta_0)) sectors larger (F(θ0F(\\theta_0), subtracting triangle section finally find segment area, F(θ1)−F(θ0)−12|x1y0−x0y1|, F(\\theta_1) - F(\\theta_0) - \\frac{1}{2}\\left|x_1y_0 - x_0y_1\\right|,  F(θ)=ab[θ−arctan((b−)sin2θb++(b−)cos2θ)]. F(\\theta) = \\frac{}{b}\\left[ \\theta - \\arctan{\\left(\\frac{(b - )\\sin{2\\theta}}{b + +(b - )\\cos{2\\theta}} \\right)}\\right]. procedure illustrated following figure. Note situations algorithm altered, sector angle ranges beyond π\\pi—refer interested reader Eberly (2016). elliptical segment blue found first subtracting elliptical sector (,0)(, 0) θ0\\theta_0 one (,0)(, 0) θ1\\theta_1 subtracting triangle part (grey). Finally, area overlap obtained adding area polygon elliptical arcs together. Note yet give us areas require, namely AA: area-equivalents set intersections relative complements definition intersections. , must decompose overlap areas area maps uniquely subspace set configuration. , however, simply matter transversing hierarchy overlaps subtracting higher-order overlaps lower-order ones. three-set relationship sets AA, BB, CC, instance, means subtracting ∩B∩CA\\cap B \\cap C overlap ∩BA \\cap B one retrieve equivalent (∩B)\\C(\\cap B) \\setminus C. exact algorithm may rare instances4, break , culprit numerical precision issues occur ellipses tangent completely overlap. cases, algorithm approximate area involved overlap spreading points across ellipses using Vogel’s method. identifying points inside intersection via inequality [(x−h)cosϕ+(y−k)sinϕ]2a2+[(x−h)sinϕ−(y−k)cosϕ]2b2<1, \\begin{aligned} &\\frac{\\left[(x-h)\\cos{\\phi}+(y-k)\\sin{\\phi} \\right]^2}{^2} +  &\\quad \\frac{\\left[(x-h) \\sin{\\phi}-(y-k)\\cos{\\phi}\\right]^2}{b^2} < 1, \\end{aligned}  xx yy coordinates sampled points, finally approximating area multiplying proportion points inside overlap area ellipse. place, now able compute areas intersections relative complements, ω\\omega, numerical precision.","code":""},{"path":"/articles/under-the-hood.html","id":"final-optimization","dir":"Articles","previous_headings":"Final layout","what":"Final optimization","title":"eulerr under the hood","text":"feed initial layout optimizer—employ nlm() stats now also provide option use ellipses rather circles, allowing “circles” rotate relation semiaxes vary, altogether rendering five parameters optimize per set ellipse (three restrict circles). iteration optimizer, areas intersections analyzed measure loss returned. loss use venneuler (Frederickson 2016), namely residual sums squares. fitted diagram still inexact procedure, offer final step pass parameters last-ditch optimizer. weapon choice5 stress (Wilkinson 2012), also loss metric use final optimization step used venneuler, well diagError (Micallef Rodgers 2014), used eulerAPE. stress metric easily grasped can transformed rough analogue correlation coefficient via r=1−stress2r = \\sqrt{1-\\text{stress}^2}. diagError, meanwhile, given maxi=1,2,…,n|ωi∑=1nωi−Ai∑=1nAi|, {\\max_{= 1, 2, \\dots, n}}\\left| \\frac{\\omega_i}{\\sum_{=1}^n \\omega_i} - \\frac{A_i}{\\sum_{=1}^n A_i} \\right|, maximum absolute difference proportion ω\\omega respective unique area diagram.","code":""},{"path":[]},{"path":"/articles/venn-diagrams.html","id":"examples-of-venn-and-euler-diagrams","dir":"Articles","previous_headings":"","what":"Examples of Venn and Euler diagrams","title":"Venn diagrams with eulerr","text":"now look Venn diagrams respective Euler diagrams.     can see last plot, cases Euler diagrams can misleading. Despite algorithm attempting best make diagram area-proportional, constraints imposed geometry ellipses prevent perfect fit. probably case Venn diagram makes good alternative. author’s opinion, opposite true rest.","code":"library(eulerr) set.seed(1)  s2 <- c(A = 1, B = 2)  plot(venn(s2)) plot(euler(s2), quantities = TRUE) plot(venn(fruits[, 1:3])) plot(euler(fruits[, 1:3], shape = \"ellipse\"), quantities = TRUE) s4 <- list(a = c(1, 2, 3),            b = c(1, 2),            c = c(1, 4),            e = c(5)) plot(venn(s4)) plot(euler(s4, shape = \"ellipse\"), quantities = TRUE) plot(venn(organisms)) plot(euler(organisms, shape = \"ellipse\"), quantities = TRUE)"},{"path":"/articles/visualization.html","id":"labeling","dir":"Articles","previous_headings":"","what":"Labeling","title":"Visualizing Euler diagrams with eulerr","text":"Labeling ellipses complicated since shapes intersections often irregular, lacking well-defined centers; know analytical solution problem. Instead, eulerr relies polylabelr package (Larsson 2018), created author. provides simple wrapper polylabel (Mapbox 2018) C++ library Mapbox.","code":""},{"path":"/articles/visualization.html","id":"aesthetics","dir":"Articles","previous_headings":"","what":"Aesthetics","title":"Visualizing Euler diagrams with eulerr","text":"Euler diagrams display quantitative qualitative data. quantitative aspect quantities sizes sets depicted diagram visualized relative sizes, possibly labels, areas shapes—main focus paper. qualitative aspects, meanwhile, consist mapping set quality category, certain gene . diagram, qualities can separated following aesthetics: color, border type, text labeling, transparency, patterns, combination . main purpose aesthetics separate different ellipses audience may interpret diagram ease clarity. Among aesthetics, best choice (viewer perspective) appears color (Blake 2016), provides useful information without extraneous chart junk. issue color, however, perceived perfectly . Eight percent men 0.4% women European Caucasian countries, instance, suffer common form, red–green color deficiency. Moreover, color often printed premium scientific publications adds utility diagram two shapes. reasons, eulerr defaults distinguishing ellipses color using manually tuned color palette. eight first colors default color palette","code":"set.seed(2) library(eulerr) con <- c(A = 1, B = 1, C = 1, D = 1, E = 1, F = 1, G = 1, H = 1,          \"A&B\" = 0.2, \"B&C\" = 0.2, \"C&D\" = 0.2, \"D&E\" = 0.2, \"E&F\" = 0.2,          \"F&G\" = 0.2, \"G&H\" = 0.2) plot(euler(con), labels = as.character(1:8))"},{"path":"/articles/visualization.html","id":"normalizing-dispersed-layouts","dir":"Articles","previous_headings":"","what":"Normalizing dispersed layouts","title":"Visualizing Euler diagrams with eulerr","text":"disjoint clusters ellipses, optimizer often spread necessary, wasting space diagram. tackle , use SKYLINE-BL rectangle packing algorithm (Jylänki 2010) designed specifically eulerr. , surround ellipse cluster bounding box, pack boxes bin appropriate size aspect ratio, adjust coordinates ellipses clusters compact diagram. bonus, increases chance similar layouts different function calls.","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johan Larsson. Author, maintainer. . Jonathan R. Godfrey. Contributor. Peter Gustafsson. Contributor. David H. Eberly. Contributor.           geometric algorithms Emanuel Huber. Contributor.           root solver code Florian Privé. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Larsson J, Gustafsson P (2018). “Case Study Fitting Area-Proportional Euler Diagrams Ellipses Using eulerr.” Proceedings International Workshop Set Visualization Reasoning, volume 2116, 84–91. http://ceur-ws.org/Vol-2116/paper7.pdf.","code":"@InProceedings{,   title = {A Case Study in Fitting Area-Proportional {{Euler}} Diagrams with Ellipses Using eulerr},   booktitle = {{Proceedings of {{International Workshop}} on {{Set Visualization}} and {{Reasoning}}}},   author = {Johan Larsson and Peter Gustafsson},   year = {2018},   month = {apr},   volume = {2116},   pages = {84--91},   publisher = {{{CEUR Workshop Proceedings}}},   address = {{{Edinburgh, United Kingdom}}},   url = {http://ceur-ws.org/Vol-2116/paper7.pdf}, }"},{"path":"/index.html","id":"eulerr-","dir":"","previous_headings":"","what":"Area-Proportional Euler and Venn Diagrams with Ellipses","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"eulerr generates area-proportional Euler diagrams display set relationships (intersections, unions, disjoints) circles ellipses. Euler diagrams Venn diagrams without requirement set interactions present (whether empty ), means , depending input, eulerr sometimes produces Venn diagrams sometimes . three sets intersecting, exact Euler diagrams often impossible. cases eulerr attempts provide good approximation numerically tuning parameters ellipses circles minimize error resulting diagram. Residuals goodness fit statistics provided assess whether resulting diagram can trusted.","code":""},{"path":[]},{"path":"/index.html","id":"cran-version","dir":"","previous_headings":"Installation","what":"CRAN version","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"","code":"install.packages(\"eulerr\")"},{"path":"/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"","code":"devtools::install_github(\"jolars/eulerr\")"},{"path":"/index.html","id":"shiny-app","dir":"","previous_headings":"Installation","what":"Shiny app","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"eulerr also available shiny app hosted eulerr.co.","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"can inspect goodness--fit metrics diagError stress solution, plot  Please see introductory vignette brief introduction eulerr hood details.","code":"library(eulerr) # From Wilkinson 2012 fit <- euler(   c(     \"A\" = 4,     \"B\" = 6,     \"C\" = 3,     \"D\" = 2,     \"E\" = 7,     \"F\" = 3,     \"A&B\" = 2,     \"A&F\" = 2,     \"B&C\" = 2,     \"B&D\" = 1,     \"B&F\" = 2,     \"C&D\" = 1,     \"D&E\" = 1,     \"E&F\" = 1,     \"A&B&F\" = 1,     \"B&C&D\" = 1   ),   shape = \"ellipse\" ) fit$stress #> [1] 5.056831e-11 fit$diagError #> [1] 1.019054e-06 plot(fit)"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"eulerr open source software, licensed GPL-3.","code":""},{"path":"/index.html","id":"versioning","dir":"","previous_headings":"","what":"Versioning","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"eulerr uses semantic versioning.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Area-Proportional Euler and Venn Diagrams with Ellipses","text":"eulerr possible without Ben Frederickson’s work venn.js Leland Wilkinson’s venneuler.","code":""},{"path":"/reference/bit_indexr.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary indices — bit_indexr","title":"Binary indices — bit_indexr","text":"Wraps around bit_indexr().","code":""},{"path":"/reference/bit_indexr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary indices — bit_indexr","text":"","code":"bit_indexr(n)"},{"path":"/reference/bit_indexr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary indices — bit_indexr","text":"n number items generate permutations ","code":""},{"path":"/reference/bit_indexr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary indices — bit_indexr","text":"matrix logicals.","code":""},{"path":"/reference/center_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Center ellipses — center_layout","title":"Center ellipses — center_layout","text":"Center ellipses","code":""},{"path":"/reference/center_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center ellipses — center_layout","text":"","code":"center_layout(pars)"},{"path":"/reference/center_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center ellipses — center_layout","text":"pars matrix data.frame x coordinates, y coordinates, minor radius () major radius (b)","code":""},{"path":"/reference/center_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center ellipses — center_layout","text":"centered version pars.","code":""},{"path":"/reference/coef.euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Return ellipses from the euler object — coef.euler","title":"Return ellipses from the euler object — coef.euler","text":"Return ellipses euler object","code":""},{"path":"/reference/coef.euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return ellipses from the euler object — coef.euler","text":"","code":"# S3 method for class 'euler' coef(object, ...)"},{"path":"/reference/coef.euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return ellipses from the euler object — coef.euler","text":"object object class 'euler' ... ignored","code":""},{"path":"/reference/coef.euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return ellipses from the euler object — coef.euler","text":"data frame ellipses fit","code":""},{"path":"/reference/compress_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress an Euler layout — compress_layout","title":"Compress an Euler layout — compress_layout","text":"Compress Euler layout","code":""},{"path":"/reference/compress_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress an Euler layout — compress_layout","text":"","code":"compress_layout(fpar, id, fit)"},{"path":"/reference/compress_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress an Euler layout — compress_layout","text":"fpar Euler layout fit euler() id binary index sets","code":""},{"path":"/reference/compress_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compress an Euler layout — compress_layout","text":"modified fpar object.","code":""},{"path":"/reference/diagError.html","id":null,"dir":"Reference","previous_headings":"","what":"diagError — diagError","title":"diagError — diagError","text":"diagError","code":""},{"path":"/reference/diagError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"diagError — diagError","text":"","code":"diagError(fit, orig, regionError = NULL)"},{"path":"/reference/diagError.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"diagError — diagError","text":"fit fitted values orig original values regionError regionError","code":""},{"path":"/reference/diagError.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"diagError — diagError","text":"diagError","code":""},{"path":"/reference/dummy_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy code a data.frame — dummy_code","title":"Dummy code a data.frame — dummy_code","text":"Dummy code data.frame","code":""},{"path":"/reference/dummy_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy code a data.frame — dummy_code","text":"","code":"dummy_code(x, sep = \"_\", factor_names = TRUE)"},{"path":"/reference/dummy_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dummy code a data.frame — dummy_code","text":"x data.frame sep character separating dummy code factors levels constructing names factor_names whether include factor names creating new names dummy codes","code":""},{"path":"/reference/dummy_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy code a data.frame — dummy_code","text":"dummy-coded version x.","code":""},{"path":"/reference/ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting coordinates for an ellipse — ellipse","title":"Plotting coordinates for an ellipse — ellipse","text":"Plotting coordinates ellipse","code":""},{"path":"/reference/ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting coordinates for an ellipse — ellipse","text":"","code":"ellipse(h, k, a, b = a, phi = 0, n = 200L)"},{"path":"/reference/ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting coordinates for an ellipse — ellipse","text":"h x coordinates k y coordinates semimajor axis b semiminor axis phi rotation n number plotting points","code":""},{"path":"/reference/ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting coordinates for an ellipse — ellipse","text":"list matrices coordinates ellipses.","code":""},{"path":"/reference/error_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Error plot for euler objects — error_plot","title":"Error plot for euler objects — error_plot","text":"diagnostic tool evaluating fit call euler() visually. color key provided default, represents chosen error metric one can easily detect areas diagram skeptical .","code":""},{"path":"/reference/error_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error plot for euler objects — error_plot","text":"","code":"error_plot(   x,   type = c(\"regionError\", \"residuals\"),   quantities = TRUE,   pal = NULL,   ... )"},{"path":"/reference/error_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error plot for euler objects — error_plot","text":"x object class euler, typically result call euler(). type error metric. 'regionError' difference percentage points input quantities whether draw error metric plot pal color palette fills legend ... arguments passed plot.euler(). Currently, providing fills, legend, strips allowed return warning.","code":""},{"path":"/reference/error_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error plot for euler objects — error_plot","text":"Returns object class eulergram, plotted device manner objects plot.euler(). See plot.eulergram() details.","code":""},{"path":"/reference/error_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Error plot for euler objects — error_plot","text":"Notice function purely provided diagnostic reasons come kind customization plot.euler() provides: color legend can customized regards color palette another key (instead labels) completely turned .","code":""},{"path":[]},{"path":"/reference/error_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error plot for euler objects — error_plot","text":"","code":"error_plot(euler(organisms), quantities = FALSE)"},{"path":"/reference/euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Area-proportional Euler diagrams — euler","title":"Area-proportional Euler diagrams — euler","text":"Fit Euler diagrams (generalization Venn diagrams) using numerical optimization find exact approximate solutions specification set relationships. shape diagram may circle ellipse.","code":""},{"path":"/reference/euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area-proportional Euler diagrams — euler","text":"","code":"euler(combinations, ...)  # Default S3 method euler(   combinations,   input = c(\"disjoint\", \"union\"),   shape = c(\"circle\", \"ellipse\"),   loss = c(\"square\", \"abs\", \"region\"),   loss_aggregator = c(\"sum\", \"max\"),   control = list(),   ... )  # S3 method for class 'data.frame' euler(   combinations,   weights = NULL,   by = NULL,   sep = \"_\",   factor_names = TRUE,   ... )  # S3 method for class 'matrix' euler(combinations, ...)  # S3 method for class 'table' euler(combinations, ...)  # S3 method for class 'list' euler(combinations, ...)"},{"path":"/reference/euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area-proportional Euler diagrams — euler","text":"combinations set relationships named numeric vector, matrix, data.frame (see methods (class)) ... arguments passed methods input type input: disjoint identities ('disjoint') unions ('union'). shape geometric shape used diagram loss type loss minimize . \"square\" used together value \"sum\" loss_aggregator, resulting loss function sum squared errors, default. loss_aggregator final loss computed. \"sum\" indicates sum losses computed loss summed . \"max\" indicates control list control parameters. extraopt: thorough optimizer (currently GenSA::GenSA()) kick (provided extraopt_threshold exceeded)? default TRUE ellipses three sets FALSE otherwise. extraopt_threshold: threshold, terms diagError, extra optimizer kicks . almost always slow process considerably. value 0 means extra optimizer kick error. value 1 means never kick . default 0.001. extraopt_control: list control parameters pass extra optimizer, max.call. See GenSA::GenSA(). weights numeric vector weights length number rows combinations. factor character matrix used base::() split data.frame matrix set combinations sep character use separate dummy-coded factors factor character vectors 'combinations'. factor_names whether include factor names constructing dummy codes","code":""},{"path":"/reference/euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area-proportional Euler diagrams — euler","text":"list object class 'euler' following parameters. ellipses matrix h k (x y-coordinates centers shapes), semiaxes b, rotation angle phi original.values set relationships input fitted.values set relationships solution residuals residuals regionError difference percentage points disjoint subset input respective area output diagError largest regionError stress normalized residual sums squares","code":""},{"path":"/reference/euler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Area-proportional Euler diagrams — euler","text":"input matrix data frame argument specified, function returns list euler diagrams. function minimizes residual sums squares, $$   \\sum_{=1}^n (A_i - \\omega_i)^2, $$ default, \\(\\omega_i\\) size ith disjoint subset, \\(A_i\\) corresponding area diagram, , unique contribution total area overlap. loss function can, however, controlled via loss argument. euler() also returns stress (venneuler), well diagError, regionError eulerAPE. stress statistic computed $$   \\frac{\\sum_{=1}^n (A_i - \\beta\\omega_i)^2}{\\sum_{=1}^n A_i^2}, $$ $$   \\beta = \\sum_{=1}^n A_i\\omega_i / \\sum_{=1}^n \\omega_i^2. $$ regionError computed $$   \\left| \\frac{A_i}{\\sum_{=1}^n A_i} - \\frac{\\omega_i}{\\sum_{=1}^n \\omega_i}\\right|. $$ diagError simply maximum regionError.","code":""},{"path":"/reference/euler.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Area-proportional Euler diagrams — euler","text":"euler(default): named numeric vector, combinations separated ampersand, instance &B = 10. Missing combinations treated 0. euler(data.frame): data.frame logicals, binary integers, factors. euler(matrix): matrix can converted data.frame logicals (description ) via base::.data.frame.matrix(). euler(table): table max(dim(x)) < 3. euler(list): list vectors, vector giving contents set (duplicates). Vectors list must named.","code":""},{"path":"/reference/euler.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Area-proportional Euler diagrams — euler","text":"Wilkinson L. Exact Approximate Area-Proportional Circular Venn Euler Diagrams. IEEE Transactions Visualization Computer Graphics (Internet). 2012 Feb (cited 2016 Apr 9);18(2):321-31. Available : doi:10.1109/TVCG.2011.56 Micallef L, Rodgers P. eulerAPE: Drawing Area-Proportional 3-Venn Diagrams Using Ellipses. PLOS ONE (Internet). 2014 Jul (cited 2016 Dec 10);9(7):e101717. Available : doi:10.1371/journal.pone.0101717","code":""},{"path":[]},{"path":"/reference/euler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area-proportional Euler diagrams — euler","text":"","code":"# Fit a diagram with circles combo <- c(A = 2, B = 2, C = 2, \"A&B\" = 1, \"A&C\" = 1, \"B&C\" = 1) fit1 <- euler(combo)  # Investigate the fit fit1 #>       original fitted residuals regionError #> A            2  2.076    -0.076       0.021 #> B            2  2.076    -0.076       0.021 #> C            2  2.076    -0.076       0.021 #> A&B          1  0.605     0.395       0.040 #> A&C          1  0.605     0.395       0.040 #> B&C          1  0.605     0.395       0.040 #> A&B&C        0  0.494    -0.494       0.058 #>  #> diagError: 0.058  #> stress:    0.049   # Refit using ellipses instead fit2 <- euler(combo, shape = \"ellipse\")  # Investigate the fit again (which is now exact) fit2 #>       original fitted residuals regionError #> A            2      2         0           0 #> B            2      2         0           0 #> C            2      2         0           0 #> A&B          1      1         0           0 #> A&C          1      1         0           0 #> B&C          1      1         0           0 #> A&B&C        0      0         0           0 #>  #> diagError: 0  #> stress:    0   # Plot it plot(fit2)   # A set with no perfect solution euler(c(   \"a\" = 3491, \"b\" = 3409, \"c\" = 3503,   \"a&b\" = 120, \"a&c\" = 114, \"b&c\" = 132,   \"a&b&c\" = 50 )) #>       original fitted residuals regionError #> a         3491   3491         0       0.001 #> b         3409   3409         0       0.001 #> c         3503   3503         0       0.002 #> a&b        120    120         0       0.000 #> a&c        114    114         0       0.000 #> b&c        132    132         0       0.000 #> a&b&c       50      0        50       0.005 #>  #> diagError: 0.005  #> stress:    0    # Using grouping via the 'by' argument through the data.frame method euler(fruits, by = list(sex, age)) #> female.adult  #>                     original fitted residuals regionError #> banana                     1  0.937     0.063       0.009 #> apple                      2  1.968     0.032       0.009 #> orange                     2  1.974     0.026       0.009 #> banana&apple               4  4.028    -0.028       0.010 #> banana&orange              0  0.268    -0.268       0.024 #> apple&orange               0  0.260    -0.260       0.023 #> banana&apple&orange        2  1.961     0.039       0.010 #>  #> diagError: 0.024  #> stress:    0.005  #> ------------------------------------------------------------  #> male.child  #>                     original fitted residuals regionError #> banana                     3  2.994     0.006       0.003 #> apple                      1  0.982     0.018       0.002 #> orange                     1  0.981     0.019       0.002 #> banana&apple              10 10.004    -0.004       0.007 #> banana&orange              0  0.137    -0.137       0.008 #> apple&orange               0  0.144    -0.144       0.008 #> banana&apple&orange        3  2.993     0.007       0.003 #>  #> diagError: 0.008  #> stress:    0  #> ------------------------------------------------------------  #> male.adult  #>                     original fitted residuals regionError #> banana                     3  3.000     0.000       0.000 #> apple                      2  2.003    -0.003       0.000 #> orange                     0  0.016    -0.016       0.001 #> banana&apple              10 10.000     0.000       0.001 #> banana&orange              0  0.000     0.000       0.000 #> apple&orange               1  0.996     0.004       0.000 #> banana&apple&orange        1  1.002    -0.002       0.000 #>  #> diagError: 0.001  #> stress:    0  #> ------------------------------------------------------------  #> female.child  #>                     original fitted residuals regionError #> banana                     4      4         0           0 #> apple                      0      0         0           0 #> orange                     1      1         0           0 #> banana&apple               4      4         0           0 #> banana&orange              1      1         0           0 #> apple&orange               0      0         0           0 #> banana&apple&orange        2      2         0           0 #>  #> diagError: 0  #> stress:    0    # Using the matrix method euler(organisms) #>                               original fitted residuals regionError #> animal                               0  0.582    -0.582       0.086 #> mammal                               0  0.302    -0.302       0.044 #> plant                                0  0.210    -0.210       0.031 #> sea                                  0  0.430    -0.430       0.063 #> spiny                                0  0.166    -0.166       0.025 #> animal&mammal                        2  1.817     0.183       0.018 #> animal&plant                         0  0.000     0.000       0.000 #> animal&sea                           1  0.612     0.388       0.053 #> animal&spiny                         0  0.215    -0.215       0.032 #> mammal&plant                         0  0.000     0.000       0.000 #> mammal&sea                           1  0.000     1.000       0.143 #> mammal&spiny                         0  0.000     0.000       0.000 #> plant&sea                            1  0.868     0.132       0.015 #> plant&spiny                          1  0.000     1.000       0.143 #> sea&spiny                            0  0.176    -0.176       0.026 #> animal&mammal&plant                  0  0.000     0.000       0.000 #> animal&mammal&sea                    0  0.268    -0.268       0.040 #> animal&mammal&spiny                  0  0.061    -0.061       0.009 #> animal&plant&sea                     0  0.119    -0.119       0.018 #> animal&plant&spiny                   0  0.000     0.000       0.000 #> animal&sea&spiny                     1  0.715     0.285       0.037 #> mammal&plant&sea                     0  0.000     0.000       0.000 #> mammal&plant&spiny                   0  0.000     0.000       0.000 #> mammal&sea&spiny                     0  0.000     0.000       0.000 #> plant&sea&spiny                      0  0.016    -0.016       0.002 #> animal&mammal&plant&sea              0  0.000     0.000       0.000 #> animal&mammal&plant&spiny            0  0.000     0.000       0.000 #> animal&mammal&sea&spiny              0  0.177    -0.177       0.026 #> animal&plant&sea&spiny               0  0.043    -0.043       0.006 #> mammal&plant&sea&spiny               0  0.000     0.000       0.000 #> animal&mammal&plant&sea&spiny        0  0.000     0.000       0.000 #>  #> diagError: 0.143  #> stress:    0.352   # Using weights euler(organisms, weights = c(10, 20, 5, 4, 8, 9, 2)) #>                               original fitted residuals regionError #> animal                               0  0.789    -0.789       0.019 #> mammal                               0  0.360    -0.360       0.009 #> plant                                0  0.099    -0.099       0.002 #> sea                                  0  0.409    -0.409       0.010 #> spiny                                0  0.200    -0.200       0.005 #> animal&mammal                       30 29.984     0.016       0.197 #> animal&plant                         0  0.000     0.000       0.000 #> animal&sea                           4  0.169     3.831       0.065 #> animal&spiny                         0  0.027    -0.027       0.001 #> mammal&plant                         0  0.000     0.000       0.000 #> mammal&sea                           8  0.000     8.000       0.138 #> mammal&spiny                         0  0.000     0.000       0.000 #> plant&sea                            2  0.000     2.000       0.034 #> plant&spiny                          9  9.000     0.000       0.059 #> sea&spiny                            0  0.062    -0.062       0.001 #> animal&mammal&plant                  0  0.000     0.000       0.000 #> animal&mammal&sea                    0  0.431    -0.431       0.010 #> animal&mammal&spiny                  0  0.100    -0.100       0.002 #> animal&plant&sea                     0  0.000     0.000       0.000 #> animal&plant&spiny                   0  0.176    -0.176       0.004 #> animal&sea&spiny                     5  0.018     4.982       0.086 #> mammal&plant&sea                     0  0.000     0.000       0.000 #> mammal&plant&spiny                   0  0.000     0.000       0.000 #> mammal&sea&spiny                     0  0.000     0.000       0.000 #> plant&sea&spiny                      0  0.098    -0.098       0.002 #> animal&mammal&plant&sea              0  0.000     0.000       0.000 #> animal&mammal&plant&spiny            0  0.054    -0.054       0.001 #> animal&mammal&sea&spiny              0  0.000     0.000       0.000 #> animal&plant&sea&spiny               0  0.002    -0.002       0.000 #> mammal&plant&sea&spiny               0  0.000     0.000       0.000 #> animal&mammal&plant&sea&spiny        0  0.000     0.000       0.000 #>  #> diagError: 0.197  #> stress:    0.1   # The table method euler(pain, factor_names = FALSE) #>                          original  fitted residuals regionError #> widespread                    204 204.002    -0.002           0 #> regional                      229 229.002    -0.002           0 #> male                           48  48.032    -0.032           0 #> widespread&regional             0   0.000     0.000           0 #> widespread&male                78  77.984     0.016           0 #> regional&male                 143 142.992     0.008           0 #> widespread&regional&male        0   0.247    -0.247           0 #>  #> diagError: 0  #> stress:    0   # A euler diagram from a list of sample spaces (the list method) euler(plants[c(\"erigenia\", \"solanum\", \"cynodon\")]) #>                          original fitted residuals regionError #> erigenia                        0      0         0           0 #> solanum                        16     16         0           0 #> cynodon                         1      1         0           0 #> erigenia&solanum                2      2         0           0 #> erigenia&cynodon                0      0         0           0 #> solanum&cynodon                25     25         0           0 #> erigenia&solanum&cynodon       20     20         0           0 #>  #> diagError: 0  #> stress:    0"},{"path":"/reference/eulerr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eulerr: Area-Proportional Euler and Venn Diagrams with Ellipses — eulerr-package","title":"eulerr: Area-Proportional Euler and Venn Diagrams with Ellipses — eulerr-package","text":"Generate area-proportional Euler diagrams using numerical optimization. Euler diagram generalization Venn diagram, relaxing criterion interactions need represented. Diagrams may fit ellipses circles via wide range inputs can visualized numerous ways.","code":""},{"path":[]},{"path":"/reference/eulerr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"eulerr: Area-Proportional Euler and Venn Diagrams with Ellipses — eulerr-package","text":"Maintainer: Johan Larsson johanlarsson@outlook.com (ORCID) contributors: . Jonathan R. Godfrey [contributor] Peter Gustafsson [contributor] David H. Eberly (geometric algorithms) [contributor] Emanuel Huber (root solver code) [contributor] Florian Privé [contributor]","code":""},{"path":"/reference/eulerr_default_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Default options for eulerr — eulerr_default_options","title":"Default options for eulerr — eulerr_default_options","text":"Default options eulerr","code":""},{"path":"/reference/eulerr_default_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default options for eulerr — eulerr_default_options","text":"","code":"eulerr_default_options()"},{"path":"/reference/eulerr_default_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default options for eulerr — eulerr_default_options","text":"default options eulerr","code":""},{"path":"/reference/eulerr_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package eulerr. — eulerr_deprecated","title":"Deprecated functions in package eulerr. — eulerr_deprecated","text":"functions listed deprecated defunct near future. possible, alternative functions similar functionality also mentioned. Help pages deprecated functions available help(\"_deprecated\").","code":""},{"path":"/reference/eulerr_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set global graphical parameters for eulerr — eulerr_options","title":"Get or set global graphical parameters for eulerr — eulerr_options","text":"function provides means set default parameters functions eulerr. Query eulerr_options() (without argument) see available options read plot-related ones grid::gpar() graphics::par().","code":""},{"path":"/reference/eulerr_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set global graphical parameters for eulerr — eulerr_options","text":"","code":"eulerr_options(...)"},{"path":"/reference/eulerr_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set global graphical parameters for eulerr — eulerr_options","text":"... objects update global graphical parameters eulerr .","code":""},{"path":"/reference/eulerr_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set global graphical parameters for eulerr — eulerr_options","text":"function gets sets updates global environment used plot.euler().","code":""},{"path":"/reference/eulerr_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get or set global graphical parameters for eulerr — eulerr_options","text":"Currently, following items considered: pointsize size pts used basis fontsizes margin sizes resulting plot fills list items fill alpha edges list items col, alpha, lex, lwd, lty labels list items rot, col, alpha, fontsize, cex, fontfamily, fontface, lineheight, font quantities list items type, rot, col, alpha, fontsize, cex, fontfamily, lineheight, font strips col, alpha, fontsize, cex, fontfamily, lineheight, font legend arguments grid::legendGrob() well col, alpha, fontsize, cex, fontfamily, lineheight, font main arguments grid::textGrob() padding grid::unit() giving padding various elements plots plot.euler(), can change , instance, want increase spacing labels, quantities, percentages.","code":""},{"path":[]},{"path":"/reference/eulerr_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set global graphical parameters for eulerr — eulerr_options","text":"","code":"eulerr_options(edges = list(col = \"blue\"), fontsize = 10) eulerr_options(n_threads = 2)"},{"path":"/reference/fitted.euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted values of euler object — fitted.euler","title":"Fitted values of euler object — fitted.euler","text":"Fitted values euler object","code":""},{"path":"/reference/fitted.euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitted values of euler object — fitted.euler","text":"","code":"# S3 method for class 'euler' fitted(object, ...)"},{"path":"/reference/fitted.euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitted values of euler object — fitted.euler","text":"object object class 'euler' ... ignored","code":""},{"path":"/reference/fitted.euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitted values of euler object — fitted.euler","text":"fitted values","code":""},{"path":"/reference/fruits.html","id":null,"dir":"Reference","previous_headings":"","what":"Fruits — fruits","title":"Fruits — fruits","text":"synthethic data set preferences fruits overlaps, generated showcase examples package.","code":""},{"path":"/reference/fruits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fruits — fruits","text":"","code":"fruits"},{"path":"/reference/fruits.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fruits — fruits","text":"data.frame 100 observations 5 variables: banana whether person likes bananas, logical apple whether person likes apples, logical orange whether person likes oranges, logical sex sex person, factor levels 'male' 'female' age age person, factor levels 'child' 'adult'","code":""},{"path":"/reference/get_bounding_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the bounding box of an ellipse — get_bounding_box","title":"Get the bounding box of an ellipse — get_bounding_box","text":"Get bounding box ellipse","code":""},{"path":"/reference/get_bounding_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the bounding box of an ellipse — get_bounding_box","text":"","code":"get_bounding_box(h, k, a, b = NULL, phi = NULL)"},{"path":"/reference/get_bounding_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the bounding box of an ellipse — get_bounding_box","text":"h x-coordinate center k y-coordinate center radius semi-major axis b semi-minor axis phi rotation","code":""},{"path":"/reference/get_bounding_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the bounding box of an ellipse — get_bounding_box","text":"bounding box list xlim ylim","code":""},{"path":"/reference/get_constraints.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up constraints for optimization — get_constraints","title":"Set up constraints for optimization — get_constraints","text":"Set constraints optimization","code":""},{"path":"/reference/get_constraints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up constraints for optimization — get_constraints","text":"","code":"get_constraints(newpars)"},{"path":"/reference/get_constraints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up constraints for optimization — get_constraints","text":"newpars parameters first optimizer","code":""},{"path":"/reference/get_constraints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up constraints for optimization — get_constraints","text":"list lower upper constraints","code":""},{"path":"/reference/is_false.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is strictly FALSE — is_false","title":"Check if object is strictly FALSE — is_false","text":"Check object strictly FALSE","code":""},{"path":"/reference/is_false.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is strictly FALSE — is_false","text":"","code":"is_false(x)"},{"path":"/reference/is_false.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is strictly FALSE — is_false","text":"x object check","code":""},{"path":"/reference/is_false.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is strictly FALSE — is_false","text":"logical.","code":""},{"path":"/reference/is_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector is an integer — is_integer","title":"Check if a vector is an integer — is_integer","text":"Check vector integer","code":""},{"path":"/reference/is_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector is an integer — is_integer","text":"","code":"is_integer(x, tol = .Machine$double.eps^0.5)"},{"path":"/reference/is_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a vector is an integer — is_integer","text":"x vector","code":""},{"path":"/reference/is_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a vector is an integer — is_integer","text":"TRUE FALSE.","code":""},{"path":"/reference/is_real.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if vector is a real (numeric non-integer) — is_real","title":"Check if vector is a real (numeric non-integer) — is_real","text":"Check vector real (numeric non-integer)","code":""},{"path":"/reference/is_real.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if vector is a real (numeric non-integer) — is_real","text":"","code":"is_real(x, tol = .Machine$double.eps^0.5)"},{"path":"/reference/is_real.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if vector is a real (numeric non-integer) — is_real","text":"x","code":""},{"path":"/reference/is_real.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if vector is a real (numeric non-integer) — is_real","text":"logical.","code":""},{"path":"/reference/makeContent.EulerTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Avoid overlap for labels — makeContent.EulerTags","title":"Avoid overlap for labels — makeContent.EulerTags","text":"method grid::makeContent() sets ","code":""},{"path":"/reference/makeContent.EulerTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Avoid overlap for labels — makeContent.EulerTags","text":"","code":"# S3 method for class 'EulerTags' makeContent(x)"},{"path":"/reference/mix_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Blend (average) colors — mix_colors","title":"Blend (average) colors — mix_colors","text":"Blend (average) colors","code":""},{"path":"/reference/mix_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blend (average) colors — mix_colors","text":"","code":"mix_colors(rcol_in)"},{"path":"/reference/mix_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blend (average) colors — mix_colors","text":"rcol_in vector R colors","code":""},{"path":"/reference/mix_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blend (average) colors — mix_colors","text":"single R color","code":""},{"path":"/reference/n_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of sets in he input — n_sets","title":"Get the number of sets in he input — n_sets","text":"Get number sets input","code":""},{"path":"/reference/n_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of sets in he input — n_sets","text":"","code":"n_sets(combinations)"},{"path":"/reference/n_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of sets in he input — n_sets","text":"combinations vector combinations (see euler())","code":""},{"path":"/reference/n_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of sets in he input — n_sets","text":"number sets input","code":""},{"path":"/reference/normalize_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize an angle to [-pi, pi) — normalize_angle","title":"Normalize an angle to [-pi, pi) — normalize_angle","text":"Normalize angle [-pi, pi)","code":""},{"path":"/reference/normalize_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize an angle to [-pi, pi) — normalize_angle","text":"","code":"normalize_angle(x)"},{"path":"/reference/normalize_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize an angle to [-pi, pi) — normalize_angle","text":"x angle radians","code":""},{"path":"/reference/normalize_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize an angle to [-pi, pi) — normalize_angle","text":"normalized angle.","code":""},{"path":"/reference/normalize_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize parameters (semiaxes and rotation) — normalize_pars","title":"Normalize parameters (semiaxes and rotation) — normalize_pars","text":"Normalize parameters (semiaxes rotation)","code":""},{"path":"/reference/normalize_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize parameters (semiaxes and rotation) — normalize_pars","text":"","code":"normalize_pars(m)"},{"path":"/reference/normalize_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize parameters (semiaxes and rotation) — normalize_pars","text":"m pars","code":""},{"path":"/reference/normalize_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize parameters (semiaxes and rotation) — normalize_pars","text":"m, normalized","code":""},{"path":"/reference/organisms.html","id":null,"dir":"Reference","previous_headings":"","what":"Organisms — organisms","title":"Organisms — organisms","text":"Example data VennMaster package.","code":""},{"path":"/reference/organisms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organisms — organisms","text":"","code":"organisms"},{"path":"/reference/organisms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Organisms — organisms","text":"matrix 7 observations, consisting various organisms, 5 variables: animal, mammal, plant, sea, , spiny, indicating whether organism belongs category .","code":""},{"path":"/reference/organisms.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Organisms — organisms","text":"https://github.com/sysbio-bioinf/VennMaster/blob/master/data_examples/deploy/example1.list","code":""},{"path":"/reference/organisms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Organisms — organisms","text":"Note data difficult fit using Euler diagram, even use ellipses, clear one chooses study various overlaps resulting diagrams.","code":""},{"path":"/reference/pain.html","id":null,"dir":"Reference","previous_headings":"","what":"Pain distribution data — pain","title":"Pain distribution data — pain","text":"Data study pain distribution patients persistent neck pain relation whiplash trauma.","code":""},{"path":"/reference/pain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pain distribution data — pain","text":"","code":"pain"},{"path":"/reference/pain.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pain distribution data — pain","text":"flat table (cross-table) sex columns pain distribution rows integer counts making cells table.","code":""},{"path":"/reference/pain.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pain distribution data — pain","text":"Westergren H, Larsson J, Freeman M, Carlsson , Jöud , Malmström E-M. Sex-based differences pain distribution cohort patients persistent post-traumatic neck pain. Disability Rehabilitation. 2017 Jan 27","code":""},{"path":"/reference/pain.html","id":"disclaimer","dir":"Reference","previous_headings":"","what":"Disclaimer","title":"Pain distribution data — pain","text":"Note maintainer package author source data.","code":""},{"path":"/reference/plants.html","id":null,"dir":"Reference","previous_headings":"","what":"Plants — plants","title":"Plants — plants","text":"Data plants states US Canada occur .","code":""},{"path":"/reference/plants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plants — plants","text":"","code":"plants"},{"path":"/reference/plants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plants — plants","text":"list 33,721 plants, containing character vector listing states US Canada occur. names list specify species genus plant.","code":""},{"path":"/reference/plants.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Plants — plants","text":"USDA, NRCS. 2008. PLANTS Database (http://plants.usda.gov/, 31 December 2008). National Plant Data Center, Baton Rouge, LA 70874-4490 USA. Dua, D. Karra Taniskidou, E. (2017). UCI Machine Learning Repository http://archive.ics.uci.edu/ml/. Irvine, CA: University California, School Information Computer Science.","code":""},{"path":"/reference/plot.euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Euler and Venn diagrams — plot.euler","title":"Plot Euler and Venn diagrams — plot.euler","text":"Plot diagrams fit euler() venn() using grid::Grid() graphics. function sets necessary plot parameters computes geometry diagram. plot.eulergram(), meanwhile, actual plotting diagram. Please see Details section learn individual settings argument.","code":""},{"path":"/reference/plot.euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Euler and Venn diagrams — plot.euler","text":"","code":"# S3 method for class 'euler' plot(   x,   fills = TRUE,   edges = TRUE,   legend = FALSE,   labels = identical(legend, FALSE),   quantities = FALSE,   strips = NULL,   main = NULL,   n = 200L,   adjust_labels = TRUE,   ... )  # S3 method for class 'venn' plot(   x,   fills = TRUE,   edges = TRUE,   legend = FALSE,   labels = identical(legend, FALSE),   quantities = TRUE,   strips = NULL,   main = NULL,   n = 200L,   adjust_labels = TRUE,   ... )"},{"path":"/reference/plot.euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Euler and Venn diagrams — plot.euler","text":"x object class 'euler', generated euler() fills logical, vector, list graphical parameters fills diagram. Vectors assumed colors fills. See grid::grid.path(). edges logical, vector, list graphical parameters edges diagram. Vectors assumed colors edges. See grid::grid.polyline(). legend logical scalar list. list, item side can used set location legend. See grid::grid.legend(). labels logical, vector, list. Vectors assumed text labels. See grid::grid.text(). quantities logical, vector, list. Vectors assumed text quantities' labels, default original values input euler(). addition arguments apply grid::grid.text(), argument type may also used combination \"counts\" \"percent\". first item printed first second printed thereafter inside brackets. default type = \"counts\". strips list, ignored unless '' argument used euler() main title plot form character, expression, list something can sensibly converted label via grDevices::.graphicsAnnot(). list length one can provided, case element used label. list longer length provided, item named 'label' must provided (used actual text). n number vertices edges fills adjust_labels logical. TRUE, adjustment made avoid overlaps --limits plotting labels, quantities, percentages. ... parameters update fills edges thereby shortcut set parameters grid::grid.text().","code":""},{"path":"/reference/plot.euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Euler and Venn diagrams — plot.euler","text":"Provides object class 'eulergram' , description diagram drawn. plot.eulergram() actual drawing diagram.","code":""},{"path":"/reference/plot.euler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Euler and Venn diagrams — plot.euler","text":"difference plot.euler() plot.venn() quantities set TRUE default latter FALSE former. arguments function accept either logical, vector, list logical values set attribute , vectors shortcuts commonly used options (see individual parameters), lists enable fine-grained control, including graphical parameters described grid::gpar() control arguments specific argument. various grid::gpar() values available argument : Defaults values, well parameters plots, can set globally using eulerr_options(). diagram fit using data.frame matrix methods using argument, plot area split panels combination one two factors. users looking plot diagram using another package, necessary parameters can collected result function assigned variable (rather printed screen).","code":""},{"path":[]},{"path":"/reference/plot.euler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Euler and Venn diagrams — plot.euler","text":"","code":"fit <- euler(c(\"A\" = 10, \"B\" = 5, \"A&B\" = 3))  # Customize colors, remove borders, bump alpha, color labels white plot(fit,      fills = list(fill = c(\"red\", \"steelblue4\"), alpha = 0.5),      labels = list(col = \"white\", font = 4))   # Add quantities to the plot plot(fit, quantities = TRUE)   # Add a custom legend and retain quantities plot(fit, quantities = TRUE, legend = list(labels = c(\"foo\", \"bar\")))   # Plot without fills and distinguish sets with border types instead plot(fit, fills = \"transparent\", lty = 1:2)   # Save plot parameters to plot using some other method diagram_description <- plot(fit)  # Plots using 'by' argument plot(euler(fruits[, 1:4], by = list(sex)), legend = TRUE)"},{"path":"/reference/plot.eulergram.html","id":null,"dir":"Reference","previous_headings":"","what":"Print (plot) Euler diagram — plot.eulergram","title":"Print (plot) Euler diagram — plot.eulergram","text":"function responsible actual drawing 'eulergram' objects created plot.euler(). print.eulergram() alias plot.eulergram(), provided plot.euler() gets called automatically.","code":""},{"path":"/reference/plot.eulergram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print (plot) Euler diagram — plot.eulergram","text":"","code":"# S3 method for class 'eulergram' plot(x, newpage = TRUE, ...)  # S3 method for class 'eulergram' print(x, ...)"},{"path":"/reference/plot.eulergram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print (plot) Euler diagram — plot.eulergram","text":"x object class 'eulergram', usually output plot.euler() newpage TRUE, opens new page via grid.newpage() draw ... ignored","code":""},{"path":"/reference/plot.eulergram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print (plot) Euler diagram — plot.eulergram","text":"plot drawn current device using grid::Grid() graphics.","code":""},{"path":"/reference/poly_clip.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygon Clipping — poly_clip","title":"Polygon Clipping — poly_clip","text":"function provided efficiently safely handle clipping operations. wraps around polyclip::polyclip(), interface Clipper C++ library.","code":""},{"path":"/reference/poly_clip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygon Clipping — poly_clip","text":"","code":"poly_clip(a, b, op = c(\"intersection\", \"union\", \"minus\", \"xor\"))"},{"path":"/reference/poly_clip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polygon Clipping — poly_clip","text":"polygon b polygon op operation","code":""},{"path":"/reference/poly_clip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polygon Clipping — poly_clip","text":"list lists.","code":""},{"path":"/reference/print.euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a summary of an Euler diagram — print.euler","title":"Print a summary of an Euler diagram — print.euler","text":"function responsible printing fits euler() provides summary fit. Prints data frame original set relationships fitted values well diagError stress statistics.","code":""},{"path":"/reference/print.euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a summary of an Euler diagram — print.euler","text":"","code":"# S3 method for class 'euler' print(x, round = 3, vsep = strrep(\"-\", 0.75 * getOption(\"width\")), ...)"},{"path":"/reference/print.euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a summary of an Euler diagram — print.euler","text":"x 'euler' object euler() round number decimal places round vsep character string paste euler objects x nested euler object ... arguments passed base::print.data.frame()","code":""},{"path":"/reference/print.euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a summary of an Euler diagram — print.euler","text":"Summary statistics fitted Euler diagram printed screen.","code":""},{"path":[]},{"path":"/reference/print.euler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a summary of an Euler diagram — print.euler","text":"","code":"euler(organisms) #>                               original fitted residuals regionError #> animal                               0  0.582    -0.582       0.086 #> mammal                               0  0.302    -0.302       0.044 #> plant                                0  0.210    -0.210       0.031 #> sea                                  0  0.430    -0.430       0.063 #> spiny                                0  0.166    -0.166       0.025 #> animal&mammal                        2  1.817     0.183       0.018 #> animal&plant                         0  0.000     0.000       0.000 #> animal&sea                           1  0.612     0.388       0.053 #> animal&spiny                         0  0.215    -0.215       0.032 #> mammal&plant                         0  0.000     0.000       0.000 #> mammal&sea                           1  0.000     1.000       0.143 #> mammal&spiny                         0  0.000     0.000       0.000 #> plant&sea                            1  0.868     0.132       0.015 #> plant&spiny                          1  0.000     1.000       0.143 #> sea&spiny                            0  0.176    -0.176       0.026 #> animal&mammal&plant                  0  0.000     0.000       0.000 #> animal&mammal&sea                    0  0.268    -0.268       0.040 #> animal&mammal&spiny                  0  0.061    -0.061       0.009 #> animal&plant&sea                     0  0.119    -0.119       0.018 #> animal&plant&spiny                   0  0.000     0.000       0.000 #> animal&sea&spiny                     1  0.715     0.285       0.037 #> mammal&plant&sea                     0  0.000     0.000       0.000 #> mammal&plant&spiny                   0  0.000     0.000       0.000 #> mammal&sea&spiny                     0  0.000     0.000       0.000 #> plant&sea&spiny                      0  0.016    -0.016       0.002 #> animal&mammal&plant&sea              0  0.000     0.000       0.000 #> animal&mammal&plant&spiny            0  0.000     0.000       0.000 #> animal&mammal&sea&spiny              0  0.177    -0.177       0.026 #> animal&plant&sea&spiny               0  0.043    -0.043       0.006 #> mammal&plant&sea&spiny               0  0.000     0.000       0.000 #> animal&mammal&plant&sea&spiny        0  0.000     0.000       0.000 #>  #> diagError: 0.143  #> stress:    0.352"},{"path":"/reference/print.venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a summary of a Venn diagram — print.venn","title":"Print a summary of a Venn diagram — print.venn","text":"function responsible printing objects venn() provides simple description number sets specifications ellipses Venn diagram.","code":""},{"path":"/reference/print.venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a summary of a Venn diagram — print.venn","text":"","code":"# S3 method for class 'venn' print(x, round = 3, vsep = strrep(\"-\", 0.75 * getOption(\"width\")), ...)"},{"path":"/reference/print.venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a summary of a Venn diagram — print.venn","text":"x object class 'venn' round number digits round ellipse specification vsep character string paste euler objects x nested euler object ... arguments passed base::print.data.frame()","code":""},{"path":"/reference/print.venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a summary of a Venn diagram — print.venn","text":"Summary statistics fitted Venn diagram printed screen.","code":""},{"path":[]},{"path":"/reference/print.venn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a summary of a Venn diagram — print.venn","text":"","code":"venn(organisms) #> 5 set Venn diagram  #>  #>             h      k a   b   phi #> animal  0.176  0.096 1 0.6 0.000 #> mammal -0.037  0.197 1 0.6 1.257 #> plant  -0.198  0.026 1 0.6 2.513 #> sea    -0.086 -0.181 1 0.6 3.770 #> spiny   0.145 -0.137 1 0.6 5.027"},{"path":"/reference/regionError.html","id":null,"dir":"Reference","previous_headings":"","what":"regionError — regionError","title":"regionError — regionError","text":"regionError","code":""},{"path":"/reference/regionError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"regionError — regionError","text":"","code":"regionError(fit, orig)"},{"path":"/reference/regionError.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"regionError — regionError","text":"fit fitted values orig original values","code":""},{"path":"/reference/regionError.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"regionError — regionError","text":"regionError","code":""},{"path":"/reference/replace_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace (refresh) a list — replace_list","title":"Replace (refresh) a list — replace_list","text":"Unlike update_list, function modifies, add, items list.","code":""},{"path":"/reference/replace_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace (refresh) a list — replace_list","text":"","code":"replace_list(old, new)"},{"path":"/reference/replace_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace (refresh) a list — replace_list","text":"old original list new things update old ","code":""},{"path":"/reference/replace_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace (refresh) a list — replace_list","text":"refreshed list.","code":""},{"path":"/reference/rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale values to new range — rescale","title":"Rescale values to new range — rescale","text":"Rescale values new range","code":""},{"path":"/reference/rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale values to new range — rescale","text":"","code":"rescale(x, new_min, new_max)"},{"path":"/reference/rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale values to new range — rescale","text":"x numeric vector new_min new min new_max new max","code":""},{"path":"/reference/rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale values to new range — rescale","text":"Rescaled vector","code":""},{"path":"/reference/separate_two_discs.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize Distance Between Circles Based On Overlap — separate_two_discs","title":"Optimize Distance Between Circles Based On Overlap — separate_two_discs","text":"Optimize Distance Circles Based Overlap","code":""},{"path":"/reference/separate_two_discs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize Distance Between Circles Based On Overlap — separate_two_discs","text":"","code":"separate_two_discs(r1, r2, overlap)"},{"path":"/reference/separate_two_discs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize Distance Between Circles Based On Overlap — separate_two_discs","text":"r1 radius circle one r2 radius circle two overlap overlap (area) two circles","code":""},{"path":"/reference/separate_two_discs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize Distance Between Circles Based On Overlap — separate_two_discs","text":"necessary distance sets achieve desired overlap area.","code":""},{"path":"/reference/setup_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute geometries and label locations — setup_geometry","title":"Compute geometries and label locations — setup_geometry","text":"Compute geometries label locations","code":""},{"path":"/reference/setup_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute geometries and label locations — setup_geometry","text":"","code":"setup_geometry(x, fills, edges, labels, quantities, n, id, merged_sets)"},{"path":"/reference/setup_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute geometries and label locations — setup_geometry","text":"x object class 'euler' fills fills edges edges labels labels quantities quantities n number sets id identity matrix merged_sets sets merged?","code":""},{"path":"/reference/setup_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute geometries and label locations — setup_geometry","text":"list object slots various objects","code":""},{"path":"/reference/setup_gpar.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup gpars — setup_gpar","title":"Setup gpars — setup_gpar","text":"Setup gpars","code":""},{"path":"/reference/setup_gpar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup gpars — setup_gpar","text":"","code":"setup_gpar(default = list(), user = list(), n)"},{"path":"/reference/setup_gpar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup gpars — setup_gpar","text":"default default values user user-inputted values n required number items","code":""},{"path":"/reference/setup_gpar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup gpars — setup_gpar","text":"gpar object","code":""},{"path":"/reference/setup_grobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Grobify Euler objects — setup_grobs","title":"Grobify Euler objects — setup_grobs","text":"Grobify Euler objects","code":""},{"path":"/reference/setup_grobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grobify Euler objects — setup_grobs","text":"","code":"setup_grobs(x, fills, edges, labels, quantities, number, merged_sets)"},{"path":"/reference/setup_grobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grobify Euler objects — setup_grobs","text":"x geometry data fills fills params edges edges params labels labels params quantities quantities params number current diagram number merged_sets sets merged","code":""},{"path":"/reference/setup_grobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grobify Euler objects — setup_grobs","text":"grid::gList() returned.","code":""},{"path":"/reference/setup_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup grobs for labels (labels, quantities, percentages) — setup_tag","title":"Setup grobs for labels (labels, quantities, percentages) — setup_tag","text":"Setup grobs labels (labels, quantities, percentages)","code":""},{"path":"/reference/setup_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup grobs for labels (labels, quantities, percentages) — setup_tag","text":"","code":"setup_tag(data, labels, quantities, number)"},{"path":"/reference/setup_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup grobs for labels (labels, quantities, percentages) — setup_tag","text":"data data locations points labels plot parameters labels quantities plot parameters quantities number panel number, used naming resulting grob","code":""},{"path":"/reference/setup_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup grobs for labels (labels, quantities, percentages) — setup_tag","text":"grid::gTree() object","code":""},{"path":"/reference/skyline_pack.html","id":null,"dir":"Reference","previous_headings":"","what":"Skyline packing algorithm — skyline_pack","title":"Skyline packing algorithm — skyline_pack","text":"Skyline packing algorithm","code":""},{"path":"/reference/skyline_pack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skyline packing algorithm — skyline_pack","text":"","code":"skyline_pack(m)"},{"path":"/reference/skyline_pack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skyline packing algorithm — skyline_pack","text":"m matrix vertices rectangles","code":""},{"path":"/reference/skyline_pack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skyline packing algorithm — skyline_pack","text":"matrix updated vertices rectangles.","code":""},{"path":"/reference/stress.html","id":null,"dir":"Reference","previous_headings":"","what":"Stress — stress","title":"Stress — stress","text":"Stress","code":""},{"path":"/reference/stress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stress — stress","text":"","code":"stress(orig, fit)"},{"path":"/reference/stress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stress — stress","text":"orig original values fit fitted values","code":""},{"path":"/reference/stress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stress — stress","text":"Stress metric.","code":""},{"path":"/reference/tally_combinations.html","id":null,"dir":"Reference","previous_headings":"","what":"Tally set relationships — tally_combinations","title":"Tally set relationships — tally_combinations","text":"Tally set relationships","code":""},{"path":"/reference/tally_combinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tally set relationships — tally_combinations","text":"","code":"tally_combinations(sets, weights)"},{"path":"/reference/tally_combinations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tally set relationships — tally_combinations","text":"sets data.frame set relationships weights weights numeric vector","code":""},{"path":"/reference/tally_combinations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tally set relationships — tally_combinations","text":"Calls euler() set relationships coerced named numeric vector.","code":""},{"path":"/reference/update_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Update list with input — update_list","title":"Update list with input — update_list","text":"wrapper utils::modifyList() attempts coerce non-lists lists updating.","code":""},{"path":"/reference/update_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update list with input — update_list","text":"","code":"update_list(old, new)"},{"path":"/reference/update_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update list with input — update_list","text":"old list updated new stuff update x ","code":""},{"path":"/reference/update_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update list with input — update_list","text":"Returns updated list.","code":""},{"path":[]},{"path":"/reference/venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Venn diagrams — venn","title":"Venn diagrams — venn","text":"function fits Venn diagrams using interface almost identical euler(). Strictly speaking, Venn diagrams Euler diagrams every intersection visible, regardless whether zero. almost every incarnation Venn diagrams, however, areas diagram also non-proportional input; also case .","code":""},{"path":"/reference/venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Venn diagrams — venn","text":"","code":"venn(combinations, ...)  # Default S3 method venn(   combinations,   input = c(\"disjoint\", \"union\"),   names = letters[length(combinations)],   ... )  # S3 method for class 'table' venn(combinations, ...)  # S3 method for class 'data.frame' venn(   combinations,   weights = NULL,   by = NULL,   sep = \"_\",   factor_names = TRUE,   ... )  # S3 method for class 'matrix' venn(combinations, ...)  # S3 method for class 'list' venn(combinations, ...)"},{"path":"/reference/venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Venn diagrams — venn","text":"combinations set relationships named numeric vector, matrix, data.frame (see methods (class)) ... arguments passed methods input type input: disjoint identities ('disjoint') unions ('union'). names character vector names set length 'combinations'. Must NULL combinations one-length numeric. weights numeric vector weights length number rows combinations. factor character matrix used base::() split data.frame matrix set combinations sep character use separate dummy-coded factors factor character vectors 'combinations'. factor_names whether include factor names constructing dummy codes","code":""},{"path":"/reference/venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Venn diagrams — venn","text":"Returns object class 'venn', 'euler' items ellipses matrix h k (x y-coordinates centers shapes), semiaxes b, rotation angle phi original.values set relationships input fitted.values set relationships solution","code":""},{"path":"/reference/venn.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Venn diagrams — venn","text":"venn(default): named numeric vector, combinations separated ampersand, instance &B = 10. Missing combinations treated 0. venn(table): table max(dim(x)) < 3. venn(data.frame): data.frame logicals, binary integers, factors. venn(matrix): matrix can converted data.frame logicals (description ) via base::.data.frame.matrix(). venn(list): list vectors, vector giving contents set (duplicates). Vectors list need named.","code":""},{"path":[]},{"path":"/reference/venn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Venn diagrams — venn","text":"","code":"# The trivial version f1 <- venn(5, names = letters[1:5]) plot(f1)   # Using data (a numeric vector) f2 <- venn(c(A = 1, \"B&C\" = 3, \"A&D\" = 0.3))  # The table method venn(pain, factor_names = FALSE) #> 3 set Venn diagram  #>  #>                h     k    a    b  phi #> widespread -0.42 -0.36 1.05 1.05 3.76 #> regional    0.42 -0.36 1.05 1.05 3.76 #> male        0.00  0.36 1.05 1.05 3.76  # Using grouping via the 'by' argument through the data.frame method venn(fruits, by = list(sex, age)) #> female.adult  #> 3 set Venn diagram  #>  #>            h     k    a    b  phi #> banana -0.42 -0.36 1.05 1.05 3.76 #> apple   0.42 -0.36 1.05 1.05 3.76 #> orange  0.00  0.36 1.05 1.05 3.76 #> ------------------------------------------------------------  #> male.child  #> 3 set Venn diagram  #>  #>            h     k    a    b  phi #> banana -0.42 -0.36 1.05 1.05 3.76 #> apple   0.42 -0.36 1.05 1.05 3.76 #> orange  0.00  0.36 1.05 1.05 3.76 #> ------------------------------------------------------------  #> male.adult  #> 3 set Venn diagram  #>  #>            h     k    a    b  phi #> banana -0.42 -0.36 1.05 1.05 3.76 #> apple   0.42 -0.36 1.05 1.05 3.76 #> orange  0.00  0.36 1.05 1.05 3.76 #> ------------------------------------------------------------  #> female.child  #> 3 set Venn diagram  #>  #>            h     k    a    b  phi #> banana -0.42 -0.36 1.05 1.05 3.76 #> apple   0.42 -0.36 1.05 1.05 3.76 #> orange  0.00  0.36 1.05 1.05 3.76   # Using the matrix method venn(organisms) #> 5 set Venn diagram  #>  #>             h      k a   b   phi #> animal  0.176  0.096 1 0.6 0.000 #> mammal -0.037  0.197 1 0.6 1.257 #> plant  -0.198  0.026 1 0.6 2.513 #> sea    -0.086 -0.181 1 0.6 3.770 #> spiny   0.145 -0.137 1 0.6 5.027  # Using weights venn(organisms, weights = c(10, 20, 5, 4, 8, 9, 2)) #> 5 set Venn diagram  #>  #>             h      k a   b   phi #> animal  0.176  0.096 1 0.6 0.000 #> mammal -0.037  0.197 1 0.6 1.257 #> plant  -0.198  0.026 1 0.6 2.513 #> sea    -0.086 -0.181 1 0.6 3.770 #> spiny   0.145 -0.137 1 0.6 5.027  # A venn diagram from a list of sample spaces (the list method) venn(plants[c(\"erigenia\", \"solanum\", \"cynodon\")]) #> 3 set Venn diagram  #>  #>              h     k    a    b  phi #> erigenia -0.42 -0.36 1.05 1.05 3.76 #> solanum   0.42 -0.36 1.05 1.05 3.76 #> cynodon   0.00  0.36 1.05 1.05 3.76"}]
